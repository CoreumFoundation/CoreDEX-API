// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.0
// source: domain/order/order.proto

package order

import (
	decimal "github.com/CoreumFoundation/CoreDEX-API/domain/decimal"
	denom "github.com/CoreumFoundation/CoreDEX-API/domain/denom"
	metadata "github.com/CoreumFoundation/CoreDEX-API/domain/metadata"
	order_properties "github.com/CoreumFoundation/CoreDEX-API/domain/order-properties"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Type is order type.
type OrderType int32

const (
	// order_type_unspecified reserves the default value, to protect against unexpected settings.
	OrderType_ORDER_TYPE_UNSPECIFIED OrderType = 0
	// order_type_limit means that the order is limit order.
	OrderType_ORDER_TYPE_LIMIT OrderType = 1
	// limit order_type_market that the order is market order.
	OrderType_ORDER_TYPE_MARKET OrderType = 2
)

// Enum value maps for OrderType.
var (
	OrderType_name = map[int32]string{
		0: "ORDER_TYPE_UNSPECIFIED",
		1: "ORDER_TYPE_LIMIT",
		2: "ORDER_TYPE_MARKET",
	}
	OrderType_value = map[string]int32{
		"ORDER_TYPE_UNSPECIFIED": 0,
		"ORDER_TYPE_LIMIT":       1,
		"ORDER_TYPE_MARKET":      2,
	}
)

func (x OrderType) Enum() *OrderType {
	p := new(OrderType)
	*p = x
	return p
}

func (x OrderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderType) Descriptor() protoreflect.EnumDescriptor {
	return file_domain_order_order_proto_enumTypes[0].Descriptor()
}

func (OrderType) Type() protoreflect.EnumType {
	return &file_domain_order_order_proto_enumTypes[0]
}

func (x OrderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderType.Descriptor instead.
func (OrderType) EnumDescriptor() ([]byte, []int) {
	return file_domain_order_order_proto_rawDescGZIP(), []int{0}
}

// TimeInForce is order time in force.
type TimeInForce int32

const (
	// time_in_force_unspecified reserves the default value, to protect against unexpected settings.
	TimeInForce_TIME_IN_FORCE_UNSPECIFIED TimeInForce = 0
	// time_in_force_gtc means that the order remains active until it is fully executed or manually canceled.
	TimeInForce_TIME_IN_FORCE_GTC TimeInForce = 1
	// time_in_force_ioc  means that order must be executed immediately, either in full or partially. Any portion of the
	//  order that cannot be filled immediately is canceled.
	TimeInForce_TIME_IN_FORCE_IOC TimeInForce = 2
	// time_in_force_fok means that order must be fully executed or canceled.
	TimeInForce_TIME_IN_FORCE_FOK TimeInForce = 3
)

// Enum value maps for TimeInForce.
var (
	TimeInForce_name = map[int32]string{
		0: "TIME_IN_FORCE_UNSPECIFIED",
		1: "TIME_IN_FORCE_GTC",
		2: "TIME_IN_FORCE_IOC",
		3: "TIME_IN_FORCE_FOK",
	}
	TimeInForce_value = map[string]int32{
		"TIME_IN_FORCE_UNSPECIFIED": 0,
		"TIME_IN_FORCE_GTC":         1,
		"TIME_IN_FORCE_IOC":         2,
		"TIME_IN_FORCE_FOK":         3,
	}
)

func (x TimeInForce) Enum() *TimeInForce {
	p := new(TimeInForce)
	*p = x
	return p
}

func (x TimeInForce) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeInForce) Descriptor() protoreflect.EnumDescriptor {
	return file_domain_order_order_proto_enumTypes[1].Descriptor()
}

func (TimeInForce) Type() protoreflect.EnumType {
	return &file_domain_order_order_proto_enumTypes[1]
}

func (x TimeInForce) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimeInForce.Descriptor instead.
func (TimeInForce) EnumDescriptor() ([]byte, []int) {
	return file_domain_order_order_proto_rawDescGZIP(), []int{1}
}

type OrderStatus int32

const (
	// order_status_unspecified reserves the default value, to protect against unexpected settings.
	OrderStatus_ORDER_STATUS_UNSPECIFIED OrderStatus = 0
	// order_status_open means that the order is open with any remaining quantity
	OrderStatus_ORDER_STATUS_OPEN OrderStatus = 1
	// order_status_cancelled means the user has canceled the order.
	OrderStatus_ORDER_STATUS_CANCELED OrderStatus = 2
	// order_status_filled means that the order is filled (quantity remaining is 0)
	OrderStatus_ORDER_STATUS_FILLED OrderStatus = 3
	// order_status_expired means that the order is expired (e.g. a block event has passed the good til block height/time).
	OrderStatus_ORDER_STATUS_EXPIRED OrderStatus = 4
)

// Enum value maps for OrderStatus.
var (
	OrderStatus_name = map[int32]string{
		0: "ORDER_STATUS_UNSPECIFIED",
		1: "ORDER_STATUS_OPEN",
		2: "ORDER_STATUS_CANCELED",
		3: "ORDER_STATUS_FILLED",
		4: "ORDER_STATUS_EXPIRED",
	}
	OrderStatus_value = map[string]int32{
		"ORDER_STATUS_UNSPECIFIED": 0,
		"ORDER_STATUS_OPEN":        1,
		"ORDER_STATUS_CANCELED":    2,
		"ORDER_STATUS_FILLED":      3,
		"ORDER_STATUS_EXPIRED":     4,
	}
)

func (x OrderStatus) Enum() *OrderStatus {
	p := new(OrderStatus)
	*p = x
	return p
}

func (x OrderStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_domain_order_order_proto_enumTypes[2].Descriptor()
}

func (OrderStatus) Type() protoreflect.EnumType {
	return &file_domain_order_order_proto_enumTypes[2]
}

func (x OrderStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderStatus.Descriptor instead.
func (OrderStatus) EnumDescriptor() ([]byte, []int) {
	return file_domain_order_order_proto_rawDescGZIP(), []int{2}
}

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account    string       `protobuf:"bytes,1,opt,name=Account,proto3" json:"Account,omitempty"` // account is order creator address.
	Type       OrderType    `protobuf:"varint,2,opt,name=Type,proto3,enum=order.OrderType" json:"Type,omitempty"`
	OrderID    string       `protobuf:"bytes,3,opt,name=OrderID,proto3" json:"OrderID,omitempty"`
	Sequence   int64        `protobuf:"varint,4,opt,name=Sequence,proto3" json:"Sequence,omitempty"` // Sequence ID
	BaseDenom  *denom.Denom `protobuf:"bytes,5,opt,name=BaseDenom,proto3" json:"BaseDenom,omitempty"`
	QuoteDenom *denom.Denom `protobuf:"bytes,6,opt,name=QuoteDenom,proto3" json:"QuoteDenom,omitempty"`
	// price is value of one unit of the BaseDenom expressed in terms of the QuoteDenom.
	Price float64 `protobuf:"fixed64,7,opt,name=Price,proto3" json:"Price,omitempty"`
	// quantity is amount of the base BaseDenom being traded.
	Quantity          *decimal.Decimal      `protobuf:"bytes,8,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
	RemainingQuantity *decimal.Decimal      `protobuf:"bytes,9,opt,name=RemainingQuantity,proto3" json:"RemainingQuantity,omitempty"`
	Side              order_properties.Side `protobuf:"varint,10,opt,name=Side,proto3,enum=orderproperties.Side" json:"Side,omitempty"` // Buy or sell
	GoodTil           *GoodTil              `protobuf:"bytes,11,opt,name=GoodTil,proto3" json:"GoodTil,omitempty"`
	TimeInForce       TimeInForce           `protobuf:"varint,12,opt,name=TimeInForce,proto3,enum=order.TimeInForce" json:"TimeInForce,omitempty"`
	// Time the order was created on chain. This can differ from metadata.CreatedAt which signifies when the record was created in the database
	BlockTime *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=BlockTime,proto3" json:"BlockTime,omitempty"`
	// Maintain the status of the order (tracked for user intent clarification)
	OrderStatus OrderStatus        `protobuf:"varint,14,opt,name=OrderStatus,proto3,enum=order.OrderStatus" json:"OrderStatus,omitempty"`
	OrderFee    int64              `protobuf:"varint,15,opt,name=OrderFee,proto3" json:"OrderFee,omitempty"`
	MetaData    *metadata.MetaData `protobuf:"bytes,20,opt,name=MetaData,proto3" json:"MetaData,omitempty"`
	TXID        *string            `protobuf:"bytes,21,opt,name=TXID,proto3,oneof" json:"TXID,omitempty"`
	BlockHeight int64              `protobuf:"varint,22,opt,name=BlockHeight,proto3" json:"BlockHeight,omitempty"`
	Enriched    bool               `protobuf:"varint,23,opt,name=Enriched,proto3" json:"Enriched,omitempty"` // If the order has been enriched with precision data
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_order_order_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_domain_order_order_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_domain_order_order_proto_rawDescGZIP(), []int{0}
}

func (x *Order) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *Order) GetType() OrderType {
	if x != nil {
		return x.Type
	}
	return OrderType_ORDER_TYPE_UNSPECIFIED
}

func (x *Order) GetOrderID() string {
	if x != nil {
		return x.OrderID
	}
	return ""
}

func (x *Order) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *Order) GetBaseDenom() *denom.Denom {
	if x != nil {
		return x.BaseDenom
	}
	return nil
}

func (x *Order) GetQuoteDenom() *denom.Denom {
	if x != nil {
		return x.QuoteDenom
	}
	return nil
}

func (x *Order) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Order) GetQuantity() *decimal.Decimal {
	if x != nil {
		return x.Quantity
	}
	return nil
}

func (x *Order) GetRemainingQuantity() *decimal.Decimal {
	if x != nil {
		return x.RemainingQuantity
	}
	return nil
}

func (x *Order) GetSide() order_properties.Side {
	if x != nil {
		return x.Side
	}
	return order_properties.Side(0)
}

func (x *Order) GetGoodTil() *GoodTil {
	if x != nil {
		return x.GoodTil
	}
	return nil
}

func (x *Order) GetTimeInForce() TimeInForce {
	if x != nil {
		return x.TimeInForce
	}
	return TimeInForce_TIME_IN_FORCE_UNSPECIFIED
}

func (x *Order) GetBlockTime() *timestamppb.Timestamp {
	if x != nil {
		return x.BlockTime
	}
	return nil
}

func (x *Order) GetOrderStatus() OrderStatus {
	if x != nil {
		return x.OrderStatus
	}
	return OrderStatus_ORDER_STATUS_UNSPECIFIED
}

func (x *Order) GetOrderFee() int64 {
	if x != nil {
		return x.OrderFee
	}
	return 0
}

func (x *Order) GetMetaData() *metadata.MetaData {
	if x != nil {
		return x.MetaData
	}
	return nil
}

func (x *Order) GetTXID() string {
	if x != nil && x.TXID != nil {
		return *x.TXID
	}
	return ""
}

func (x *Order) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *Order) GetEnriched() bool {
	if x != nil {
		return x.Enriched
	}
	return false
}

// GoodTil is a good til order settings.
type GoodTil struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// good_til_block_height means that order remains active until a specific blockchain block height is reached.
	BlockHeight int64 `protobuf:"varint,1,opt,name=BlockHeight,proto3" json:"BlockHeight,omitempty"`
	// good_til_block_time means that order remains active until a specific blockchain block time is reached.
	BlockTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=BlockTime,proto3" json:"BlockTime,omitempty"`
}

func (x *GoodTil) Reset() {
	*x = GoodTil{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_order_order_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodTil) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodTil) ProtoMessage() {}

func (x *GoodTil) ProtoReflect() protoreflect.Message {
	mi := &file_domain_order_order_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodTil.ProtoReflect.Descriptor instead.
func (*GoodTil) Descriptor() ([]byte, []int) {
	return file_domain_order_order_proto_rawDescGZIP(), []int{1}
}

func (x *GoodTil) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *GoodTil) GetBlockTime() *timestamppb.Timestamp {
	if x != nil {
		return x.BlockTime
	}
	return nil
}

type Orders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*Order `protobuf:"bytes,1,rep,name=Orders,proto3" json:"Orders,omitempty"`
	Offset *int32   `protobuf:"varint,2,opt,name=Offset,proto3,oneof" json:"Offset,omitempty"`
}

func (x *Orders) Reset() {
	*x = Orders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_order_order_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Orders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Orders) ProtoMessage() {}

func (x *Orders) ProtoReflect() protoreflect.Message {
	mi := &file_domain_order_order_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Orders.ProtoReflect.Descriptor instead.
func (*Orders) Descriptor() ([]byte, []int) {
	return file_domain_order_order_proto_rawDescGZIP(), []int{2}
}

func (x *Orders) GetOrders() []*Order {
	if x != nil {
		return x.Orders
	}
	return nil
}

func (x *Orders) GetOffset() int32 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

var File_domain_order_order_proto protoreflect.FileDescriptor

var file_domain_order_order_proto_rawDesc = []byte{
	0x0a, 0x18, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x1a, 0x18, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x2f,
	0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x2f, 0x64, 0x65, 0x63, 0x69,
	0x6d, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2d, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2d, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x82, 0x06, 0x0a, 0x05, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x09, 0x42, 0x61,
	0x73, 0x65, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x2e, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x52, 0x09, 0x42, 0x61, 0x73,
	0x65, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x2c, 0x0a, 0x0a, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x44,
	0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x65, 0x6e,
	0x6f, 0x6d, 0x2e, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x52, 0x0a, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x44,
	0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x51, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64,
	0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x08,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x3e, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x2e, 0x44, 0x65,
	0x63, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x11, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x29, 0x0a, 0x04, 0x53, 0x69, 0x64, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x52, 0x04, 0x53,
	0x69, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x47, 0x6f, 0x6f, 0x64, 0x54, 0x69, 0x6c, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x6f, 0x6f,
	0x64, 0x54, 0x69, 0x6c, 0x52, 0x07, 0x47, 0x6f, 0x6f, 0x64, 0x54, 0x69, 0x6c, 0x12, 0x34, 0x0a,
	0x0b, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49,
	0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x0b, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f,
	0x72, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a,
	0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x12,
	0x2e, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x17, 0x0a, 0x04, 0x54, 0x58, 0x49, 0x44, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x04, 0x54, 0x58, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x6e,
	0x72, 0x69, 0x63, 0x68, 0x65, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x45, 0x6e,
	0x72, 0x69, 0x63, 0x68, 0x65, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x54, 0x58, 0x49, 0x44, 0x22,
	0x65, 0x0a, 0x07, 0x47, 0x6f, 0x6f, 0x64, 0x54, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x38, 0x0a, 0x09,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x56, 0x0a, 0x06, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x24, 0x0a, 0x06, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x06,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x2a, 0x54,
	0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x4f,
	0x52, 0x44, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x4f, 0x52, 0x44, 0x45, 0x52,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10, 0x01, 0x12, 0x15, 0x0a,
	0x11, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x41, 0x52, 0x4b,
	0x45, 0x54, 0x10, 0x02, 0x2a, 0x71, 0x0a, 0x0b, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f,
	0x72, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x49, 0x4e, 0x5f, 0x46,
	0x4f, 0x52, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x49, 0x4e, 0x5f, 0x46, 0x4f,
	0x52, 0x43, 0x45, 0x5f, 0x47, 0x54, 0x43, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x49, 0x4d,
	0x45, 0x5f, 0x49, 0x4e, 0x5f, 0x46, 0x4f, 0x52, 0x43, 0x45, 0x5f, 0x49, 0x4f, 0x43, 0x10, 0x02,
	0x12, 0x15, 0x0a, 0x11, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x49, 0x4e, 0x5f, 0x46, 0x4f, 0x52, 0x43,
	0x45, 0x5f, 0x46, 0x4f, 0x4b, 0x10, 0x03, 0x2a, 0x90, 0x01, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x18, 0x4f, 0x52, 0x44, 0x45, 0x52,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15,
	0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x41, 0x4e,
	0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x4f, 0x52, 0x44, 0x45, 0x52,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x49, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x03,
	0x12, 0x18, 0x0a, 0x14, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x04, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x6f, 0x72, 0x65, 0x75, 0x6d, 0x46,
	0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x43, 0x6f, 0x72, 0x65, 0x44, 0x45,
	0x58, 0x2d, 0x41, 0x50, 0x49, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x3b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_domain_order_order_proto_rawDescOnce sync.Once
	file_domain_order_order_proto_rawDescData = file_domain_order_order_proto_rawDesc
)

func file_domain_order_order_proto_rawDescGZIP() []byte {
	file_domain_order_order_proto_rawDescOnce.Do(func() {
		file_domain_order_order_proto_rawDescData = protoimpl.X.CompressGZIP(file_domain_order_order_proto_rawDescData)
	})
	return file_domain_order_order_proto_rawDescData
}

var file_domain_order_order_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_domain_order_order_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_domain_order_order_proto_goTypes = []interface{}{
	(OrderType)(0),                // 0: order.OrderType
	(TimeInForce)(0),              // 1: order.TimeInForce
	(OrderStatus)(0),              // 2: order.OrderStatus
	(*Order)(nil),                 // 3: order.Order
	(*GoodTil)(nil),               // 4: order.GoodTil
	(*Orders)(nil),                // 5: order.Orders
	(*denom.Denom)(nil),           // 6: denom.Denom
	(*decimal.Decimal)(nil),       // 7: decimal.Decimal
	(order_properties.Side)(0),    // 8: orderproperties.Side
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
	(*metadata.MetaData)(nil),     // 10: metadata.MetaData
}
var file_domain_order_order_proto_depIdxs = []int32{
	0,  // 0: order.Order.Type:type_name -> order.OrderType
	6,  // 1: order.Order.BaseDenom:type_name -> denom.Denom
	6,  // 2: order.Order.QuoteDenom:type_name -> denom.Denom
	7,  // 3: order.Order.Quantity:type_name -> decimal.Decimal
	7,  // 4: order.Order.RemainingQuantity:type_name -> decimal.Decimal
	8,  // 5: order.Order.Side:type_name -> orderproperties.Side
	4,  // 6: order.Order.GoodTil:type_name -> order.GoodTil
	1,  // 7: order.Order.TimeInForce:type_name -> order.TimeInForce
	9,  // 8: order.Order.BlockTime:type_name -> google.protobuf.Timestamp
	2,  // 9: order.Order.OrderStatus:type_name -> order.OrderStatus
	10, // 10: order.Order.MetaData:type_name -> metadata.MetaData
	9,  // 11: order.GoodTil.BlockTime:type_name -> google.protobuf.Timestamp
	3,  // 12: order.Orders.Orders:type_name -> order.Order
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_domain_order_order_proto_init() }
func file_domain_order_order_proto_init() {
	if File_domain_order_order_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_domain_order_order_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_order_order_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodTil); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_order_order_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Orders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_domain_order_order_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_domain_order_order_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_domain_order_order_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_domain_order_order_proto_goTypes,
		DependencyIndexes: file_domain_order_order_proto_depIdxs,
		EnumInfos:         file_domain_order_order_proto_enumTypes,
		MessageInfos:      file_domain_order_order_proto_msgTypes,
	}.Build()
	File_domain_order_order_proto = out.File
	file_domain_order_order_proto_rawDesc = nil
	file_domain_order_order_proto_goTypes = nil
	file_domain_order_order_proto_depIdxs = nil
}
